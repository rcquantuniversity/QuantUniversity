{
  "_args": [
    [
      {
        "raw": "simple-hashset",
        "scope": null,
        "escapedName": "simple-hashset",
        "name": "simple-hashset",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\QuantUniversity-6\\Rohan\\QuantUniversity\\AdaptiveAlgo"
    ]
  ],
  "_from": "simple-hashset@latest",
  "_id": "simple-hashset@0.0.1",
  "_inCache": true,
  "_location": "/simple-hashset",
  "_npmUser": {
    "name": "leafty",
    "email": "johann.thiebaut@gmail.com"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {},
  "_requested": {
    "raw": "simple-hashset",
    "scope": null,
    "escapedName": "simple-hashset",
    "name": "simple-hashset",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/simple-hashset/-/simple-hashset-0.0.1.tgz",
  "_shasum": "a451cae3eedc44751f0755fc6f96c0a2a6817da6",
  "_shrinkwrap": null,
  "_spec": "simple-hashset",
  "_where": "C:\\Users\\QuantUniversity-6\\Rohan\\QuantUniversity\\AdaptiveAlgo",
  "author": {
    "name": "Johann-Michael Thiebaut",
    "email": "johann.thiebaut@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/leafty/node-set/issues"
  },
  "dependencies": {},
  "description": "Simple hashsets for node",
  "devDependencies": {
    "mocha": "~1.13.0",
    "should": "~1.3.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "a451cae3eedc44751f0755fc6f96c0a2a6817da6",
    "tarball": "https://registry.npmjs.org/simple-hashset/-/simple-hashset-0.0.1.tgz"
  },
  "homepage": "https://github.com/leafty/node-set#readme",
  "keywords": [
    "hashset",
    "set"
  ],
  "license": "MIT",
  "main": "./lib/set",
  "maintainers": [
    {
      "name": "leafty",
      "email": "johann.thiebaut@gmail.com"
    }
  ],
  "name": "simple-hashset",
  "optionalDependencies": {},
  "readme": "simple-hashset\n==============\n\nSimple hashsets for node\n\n## Installation\n\n```bash\nnpm install simple-hashset\n```\n\n## Usage\n\n```js\nvar Set = require('simple-hashset');\n\nvar s = new Set('a', 'b', 'c');\n\nconsole.log(s.contains('b'));\nconsole.log(s.contains('d'));\n```\n\n## Limitations\n\nThis package simply uses objects as associative arrays.\nTherefore, using sets with objects or functions is not recommended.\n\n## API\n\n### new Set()\n\n```js\nvar a = new Set();        // Creates an empty set\nvar b = new Set(1, 2, 4); // Creates a set that contains 1, 2 and 3\nvar c = new Set(b);       // Creates a copy of set b\n```\n\n### Set#isEmpty()\n\nReturns `true` iff the set is empty.\n\n### Set#size()\n\nReturns the cardinality of the set.\n\n### Set#contains(elem)\n\nReturns `true` iff `elem` is an element of the set.\n\n### Set#add()\n\nAdds elements to the set.\n\n```js\nvar s = new Set(1); // s = { 1 }\n\ns.add(2, 5, 7);     // s = { 1, 2, 5, 7 }\n```\n\n### Set#remove()\n\nRemoves elements to the set.\n\n```js\nvar s = new Set(1, 2, 3, 4); // s = { 1, 2, 3, 4 }\n\ns.remove(2, 7);              // s = { 1, 3, 4 }\n```\n\n### Set#toArray()\n\nReturns an array containing the elements of the set.\nThe order of elements is unspecified.\n\n### Set#union(that)\n\nReturns a **new** set containing the elements from `this` and the\nelements from `that`.\n\n### Set#diff(that)\n\nReturns a **new** set containing the elements from `this`\nwhich are not in `that`.\n\n### Set#intersect(that)\n\nReturns a **new** set containing the elements from `this`\nwhich are also in `that`.\n\n### Set#delta(that)\n\nReturns a **new** set containing the elements that are in either `this`\nor `that` but not in both.\nThis is the symmetric difference of sets.\n\n### Set#subset(that)\n\nReturns true iff `this` is a subset of `that`.\n\n### Set#strictSubset(that)\n\nReturns true iff `this` is a strict subset of `that`.\n\n### Set#superset(that)\n\nReturns true iff `this` is a superset of `that`.\n\n### Set#strictSuperset(that)\n\nReturns true iff `this` is a strict superset of `that`.\n\n### Set#equal(that)\n\nReturns true iff `this` is equal to `that`.\n\n### Set#map(f)\n\nReturns a new set containing elements mapped by `f`.\n\n```js\nvar a = new Set(2, 5); // a = { 2, 5 }\nvar f = function(x) {\n  var y = parseInt(x);\n  return y+1;\n};\nvar b = a.map(f);      // b = { 3, 6 }\n```\n\n### Set#flatMap(f)\n\nLike map but `f` returns sets.\n\n```js\nvar a = new Set(2, 5);    // a = { 2, 5 }\nvar f = function(x) {\n  var y = parseInt(x);\n  return new Set(y, y+3);\n};\nvar b = a.flatMap(f);     // b = { 2, 5, 8 }\n```\n\n## License\n\nCopyright (c) 2013 Johann-Michael Thiebaut <[johann.thiebaut@gmail.com](mailto:johann.thiebaut@gmail.com)>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leafty/node-set.git"
  },
  "scripts": {
    "prepublish": "npm prune",
    "test": "make test"
  },
  "version": "0.0.1"
}
